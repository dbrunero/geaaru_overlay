#!/sbin/runscript
# Copyright 1999-2014 Gentoo Foundation
# Author: geaaru
# Distributed under the terms of the GNU General Public License v2
# $Header: $

extra_commands="save"
extra_started_commands="reload"

nft_bin=/sbin/nft

depend() {
  need localmount
  before net
}

retrieve_chains() {

  if [ -z "${NFTABLES_CHAINS}" ] ; then
    # Use default chains
    nft_chains="filter nat mangle"

  else
    nft_chains="${NFTABLES_CHAINS}"
  fi

  if [ -z "${NFTABLES6_CHAINS}" ] ; then
    nft6_chains=""
  else
    nft6_chains="${NFTABLES6_CHAINS}"
  fi

  return 0
}

checkconfig() {

  if [ -z "${NFTABLES_SCRIPT_DIR}" ] ; then
    # Use default /etc/nftables directory.
    NFTABLES_SCRIPT_DIR="/etc/nftables"
  fi

  # Check if directory exits
  if [ ! -d ${NFTABLES_SCRIPT_DIR} ] ; then
    eerror "Not starting nftables rules. Directory ${NFTABLES_SCRIPT_DIR} doesn't exits."
    return 1
  fi

  return 0
}

load_chain() {
  local cname=$1
  local ipv=$2

  if [ -z "$ipv" ] ; then
    ipv="ipv4"
  fi

  local f=${NFTABLES_SCRIPT_DIR}/${ipv}-${cname}
  if [ -f "${f}" ] ; then
    $nft_bin -f $f || return 1
  else
    ewarn "File relative to chain $cname not found. Nothing to do."
  fi

  return 0
}

save_chain() {
  local cname=$1


  if [ -z "$ipv" ] ; then
    ipv="ipv4"
  fi

  local f=${NFTABLES_SCRIPT_DIR}/${ipv}-${cname}

  echo "#!${nft_bin} -f" > $f || return 1
  $nft_bin list table ${cname} >> $f || return 1

  einfo "Save chain $cname to file $f."

  return 0
}

flush_chain() {
  local cname=$1

  $nft_bin flush table $cname || return 1

  return 0
}

actions_chains() {
  local res=0
  local ans=0
  local action=$1
  local break_loop=$2

  for i in ${nft_chains} ; do

    ${action}_chain $i || res=1
    if [ $res -ne 0 ] ; then
      ewarn "Error on $action chain $i."
      if [ -n "${break_loop}" ] ; then
        if [ ${break_loop} -eq 1 ] ; then
          break
          ans=1
        fi
      fi
    fi

  done

  # Load IPV6 chains
  for i in ${nft6_chains} ; do

    ${action}_chain $i "ipv6" || res=1
    if [ $res -ne 0 ] ; then
      ewarn "Error on $action chain ipv6 $i."
      if [ -n "${break_loop}" ] ; then
        if [ ${break_loop} -eq 1 ] ; then
          break
          ans=1
        fi
      fi
    fi

  done

  return $ans
}


start() {
  local res=0

  checkconfig || return 1

  ebegin "Loading nftables chains and rules"

  retrieve_chains

  actions_chains "load" 1 || res=1

  eend $res
}

stop() {
  local res=0

  retrieve_chains

  if [ "${SAVE_ON_STOP}" = "yes" ] ; then
    actions_chains "save" || return 1
  fi

  ebegin "Stopping nftables chains and rules"

  actions_chains "flush" || res=1

  eend $res
}

reload() {

  checkconfig || return 1

  retrieve_chains

  ebegin "Reload nftables chains and rules"

  actions_chains "flush" || return 1
  actions_chains "load"

  eend $?

}

save() {

  checkconfig || return 1

  ebegin "Save nftables chians and rules"

  retrieve_chains

  actions_chains "save"

  eend $?

}

# vim: filetype=sh
